# Generated by Django 3.2.9 on 2022-01-19 01:46

import aurora.backend.library.site
import aurora.backend.library.validators
import aurora.frontend.models
import ckeditor.fields
from django.conf import settings
import django.contrib.sites.managers
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_deleted', models.DateTimeField(blank=True, editable=False, null=True)),
                ('slugname', models.SlugField(max_length=255, unique=True, verbose_name='Slugname')),
                ('name', models.CharField(max_length=512, verbose_name='Name')),
                ('site', models.ManyToManyField(to='sites.Site')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('on_site', django.contrib.sites.managers.CurrentSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_deleted', models.DateTimeField(blank=True, editable=False, null=True)),
                ('name', models.CharField(max_length=1000, verbose_name='Name')),
                ('upload', models.FileField(help_text=aurora.backend.library.validators.Validators.help_text, max_length=1024, upload_to=aurora.frontend.models.save_file, validators=[aurora.backend.library.validators.Validators.validate], verbose_name='Upload')),
                ('meta', models.JSONField(blank=True, editable=False, null=True, verbose_name='Meta')),
                ('site', models.ManyToManyField(to='sites.Site')),
            ],
            options={
                'verbose_name': 'File',
                'verbose_name_plural': 'Files',
                'ordering': ['date_created'],
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('on_site', django.contrib.sites.managers.CurrentSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='Slideshow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_deleted', models.DateTimeField(blank=True, editable=False, null=True)),
                ('image', models.ImageField(help_text=aurora.backend.library.validators.Validators.help_text, upload_to='frontend/slideshow', validators=[aurora.backend.library.validators.Validators.validate], verbose_name='Image')),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
                ('mobile', models.BooleanField(default=False, verbose_name='Mobile UI')),
                ('site', models.ForeignKey(default=aurora.backend.library.site.get_site_pk, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sites.site')),
            ],
            options={
                'verbose_name': 'Slideshow',
                'ordering': ['date_created'],
            },
        ),
        migrations.CreateModel(
            name='Sidebar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_deleted', models.DateTimeField(blank=True, editable=False, null=True)),
                ('slugname', models.SlugField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=512, verbose_name='Title')),
                ('content', ckeditor.fields.RichTextField(verbose_name='Content')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('icon', models.CharField(blank=True, max_length=32, null=True, verbose_name='Icon')),
                ('site', models.ForeignKey(default=aurora.backend.library.site.get_site_pk, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sites.site')),
            ],
            options={
                'verbose_name': 'Sidebar',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_deleted', models.DateTimeField(blank=True, editable=False, null=True)),
                ('slugname', models.CharField(max_length=255, unique=True, verbose_name='Slugname')),
                ('title', models.CharField(max_length=512, verbose_name='Title')),
                ('content', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Content')),
                ('password', models.CharField(blank=True, max_length=256, null=True, verbose_name='Password')),
                ('post_type', models.CharField(choices=[('post', 'Post'), ('page', 'Page')], default='post', max_length=512, verbose_name='Post Type')),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Publish Date')),
                ('meta', models.JSONField(blank=True, editable=False, null=True, verbose_name='Meta')),
                ('thumbnail', models.FileField(blank=True, help_text=aurora.backend.library.validators.Validators.help_text, null=True, upload_to='frontend/pages', validators=[aurora.backend.library.validators.Validators.validate], verbose_name='Thumbnail')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='frontend.category', verbose_name='Category')),
                ('files', models.ManyToManyField(blank=True, to='frontend.Files', verbose_name='Files')),
                ('site', models.ManyToManyField(to='sites.Site')),
            ],
            options={
                'ordering': ['-date_modified', '-date_created'],
                'abstract': False,
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('on_site', django.contrib.sites.managers.CurrentSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_deleted', models.DateTimeField(blank=True, editable=False, null=True)),
                ('slugname', models.CharField(max_length=255, unique=True, verbose_name='Slugname')),
                ('title', models.CharField(max_length=512, verbose_name='Title')),
                ('content', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Content')),
                ('password', models.CharField(blank=True, max_length=256, null=True, verbose_name='Password')),
                ('post_type', models.CharField(choices=[('post', 'Post'), ('page', 'Page')], default='post', max_length=512, verbose_name='Post Type')),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Publish Date')),
                ('meta', models.JSONField(blank=True, editable=False, null=True, verbose_name='Meta')),
                ('thumbnail', models.FileField(blank=True, help_text=aurora.backend.library.validators.Validators.help_text, null=True, upload_to='frontend/pages', validators=[aurora.backend.library.validators.Validators.validate], verbose_name='Thumbnail')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='frontend.category', verbose_name='Category')),
                ('files', models.ManyToManyField(blank=True, to='frontend.Files', verbose_name='Files')),
                ('site', models.ManyToManyField(to='sites.Site')),
            ],
            options={
                'ordering': ['-date_modified', '-date_created'],
                'abstract': False,
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('on_site', django.contrib.sites.managers.CurrentSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='Navbar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_deleted', models.DateTimeField(blank=True, editable=False, null=True)),
                ('title', models.CharField(max_length=32, verbose_name='Title')),
                ('url', models.CharField(default='#', max_length=3156, verbose_name='URL')),
                ('icon', models.CharField(blank=True, max_length=32, null=True, verbose_name='icon')),
                ('order', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Order')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='frontend.navbar', verbose_name='Parent')),
                ('site', models.ForeignKey(default=aurora.backend.library.site.get_site_pk, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sites.site')),
            ],
            options={
                'verbose_name': 'Navigation Bar',
                'ordering': ['-order', 'date_created'],
            },
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_deleted', models.DateTimeField(blank=True, editable=False, null=True)),
                ('title', models.CharField(max_length=256, verbose_name='Title')),
                ('slogan', models.CharField(blank=True, max_length=256, null=True, verbose_name='Slogan')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Short Description')),
                ('keywords', models.CharField(max_length=256, verbose_name='Keywords')),
                ('logo', models.ImageField(blank=True, help_text=aurora.backend.library.validators.Validators.help_text, null=True, upload_to='frontend/logo', validators=[aurora.backend.library.validators.Validators.validate], verbose_name='Logo (16:9)')),
                ('icon', models.ImageField(blank=True, help_text=aurora.backend.library.validators.Validators.help_text, null=True, upload_to='frontend/icon', validators=[aurora.backend.library.validators.Validators.validate], verbose_name='Icon (1:1)')),
                ('slideshow', models.BooleanField(default=False, verbose_name='Use Slideshow')),
                ('jumbotron', models.BooleanField(default=True, verbose_name='Use Jumbotron')),
                ('jumbotron_bg', models.ImageField(blank=True, help_text=aurora.backend.library.validators.Validators.help_text, null=True, upload_to='frontend/', validators=[aurora.backend.library.validators.Validators.validate], verbose_name='Jumbotron Background')),
                ('jumbotron_clr', models.CharField(choices=[('light', 'Light'), ('dark', 'Dark')], default='#f1f1f1', max_length=128, verbose_name='Jumbotron Color')),
                ('address', models.CharField(max_length=512, verbose_name='Address')),
                ('email', models.EmailField(max_length=128, verbose_name='E-mail')),
                ('website', models.URLField(blank=True, max_length=512, null=True, verbose_name='Website')),
                ('phone', models.CharField(max_length=16, verbose_name='Phone')),
                ('facebook', models.URLField(blank=True, max_length=512, null=True, verbose_name='Facebook')),
                ('instagram', models.URLField(blank=True, max_length=512, null=True, verbose_name='Instagram')),
                ('youtube', models.URLField(blank=True, max_length=512, null=True, verbose_name='Youtube')),
                ('site', models.OneToOneField(default=aurora.backend.library.site.get_site_pk, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sites.site')),
            ],
            options={
                'verbose_name': 'Configuration',
                'verbose_name_plural': 'Configuration',
            },
        ),
    ]
